
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTnonassocNEQGTELTEGTLTEQleftBITORleftBITXORleftBITANDleftLSHIFTRSHIFTrightINVleftADDSUBleftMULDIVMODrightUSUBrightEXPleftPARENADD AND ASSIGN BITAND BITOR BITXOR COMMA DIV DOT ELSE END EQ EXP FALSE FLOAT FOR FUNCNAME GT GTE IF IN INT INV LOOP LPAREN LSHIFT LT LTE MOD MUL MUT NAME NEQ NEWLINE NOT OR RETURN RPAREN RSHIFT SUB THEN TIMEOUT TRUE TYPE UINT WAIT WAITTYPE WITH XORprogram : statementsempty :statements : statementstatements : statements statementstatements : empty\n    statement : declaration\n              | assignment\n              | call\n              | for\n              | if\n              | wait NEWLINE\n              | return\n    return : RETURNreturn : RETURN LPAREN arguments RPARENdeclaration : TYPE assignmentdeclaration : MUT TYPE NAME NEWLINEdeclaration : MUT TYPE assignment\n    assignment : NAME ASSIGN expression NEWLINE\n               | NAME ASSIGN call\n    call : FUNCNAME LPAREN arguments RPAREN NEWLINEcall : FUNCNAME LPAREN arguments RPAREN WITH timeout NEWLINEfor : FOR NAME IN LPAREN arguments RPAREN LOOP statements END LOOP NEWLINEif : IF expression THEN statements END IF NEWLINEif : IF expression THEN statements ELSE statements END IF NEWLINEarguments : expression\n    arguments : arguments COMMA expression\n              | arguments COMMA wait\n    arguments : emptywait : WAIT WAITTYPE expressiontimeout : TIMEOUT WAITTYPE expressionexpression : expression IF expression ELSE expressionexpression : expression LSHIFT expressionexpression : expression RSHIFT expressionexpression : expression BITAND expressionexpression : expression BITXOR expressionexpression : expression BITOR expressionexpression : expression EXP expressionexpression : expression MOD expressionexpression : expression ADD expressionexpression : expression SUB expressionexpression : expression MUL expressionexpression : expression DIV expressionexpression : expression AND expressionexpression : expression XOR expressionexpression : expression NEQ expressionexpression : expression GTE expressionexpression : expression LTE expressionexpression : expression EQ expressionexpression : expression LT expressionexpression : expression GT expressionexpression : expression OR expressionexpression : LPAREN expression RPAREN %prec PARENexpression : TYPE LPAREN expression RPAREN %prec PARENexpression : SUB expression %prec USUBexpression : INV expressionexpression : NOT expressionexpression : TIMEOUTexpression : NAMEexpression : INTexpression : FLOATexpression : TRUEexpression : FALSEexpression : UINT'
    
_lr_action_items = {'TYPE':([0,2,3,4,5,6,7,8,9,11,13,17,19,20,21,22,24,25,28,29,31,32,40,41,43,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,79,80,82,83,85,108,109,114,116,123,124,125,126,127,130,133,135,],[12,12,-3,-5,-6,-7,-8,-9,-10,-12,23,30,-13,-4,-11,-15,30,30,30,30,30,30,30,30,-17,-19,30,12,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-16,-18,30,30,12,-14,-20,30,12,12,-21,30,12,-23,12,-24,-22,]),'MUT':([0,2,3,4,5,6,7,8,9,11,19,20,21,22,43,45,51,79,80,85,108,109,116,123,124,126,127,130,133,135,],[13,13,-3,-5,-6,-7,-8,-9,-10,-12,-13,-4,-11,-15,-17,-19,13,-16,-18,13,-14,-20,13,13,-21,13,-23,13,-24,-22,]),'NAME':([0,2,3,4,5,6,7,8,9,11,12,16,17,19,20,21,22,23,24,25,28,29,31,32,40,41,43,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,79,80,82,83,85,108,109,114,116,123,124,125,126,127,130,133,135,],[14,14,-3,-5,-6,-7,-8,-9,-10,-12,14,26,34,-13,-4,-11,-15,42,34,34,34,34,34,34,34,34,-17,-19,34,14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-16,-18,34,34,14,-14,-20,34,14,14,-21,34,14,-23,14,-24,-22,]),'FUNCNAME':([0,2,3,4,5,6,7,8,9,11,19,20,21,22,24,43,45,51,79,80,85,108,109,116,123,124,126,127,130,133,135,],[15,15,-3,-5,-6,-7,-8,-9,-10,-12,-13,-4,-11,-15,15,-17,-19,15,-16,-18,15,-14,-20,15,15,-21,15,-23,15,-24,-22,]),'FOR':([0,2,3,4,5,6,7,8,9,11,19,20,21,22,43,45,51,79,80,85,108,109,116,123,124,126,127,130,133,135,],[16,16,-3,-5,-6,-7,-8,-9,-10,-12,-13,-4,-11,-15,-17,-19,16,-16,-18,16,-14,-20,16,16,-21,16,-23,16,-24,-22,]),'IF':([0,2,3,4,5,6,7,8,9,11,19,20,21,22,27,33,34,35,36,37,38,39,43,44,45,47,51,72,73,75,76,77,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,116,117,121,123,124,126,127,128,129,130,133,135,],[17,17,-3,-5,-6,-7,-8,-9,-10,-12,-13,-4,-11,-15,50,-57,-58,-59,-60,-61,-62,-63,-17,50,-19,50,17,-54,50,-55,-56,50,-16,-18,50,17,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,50,-45,-46,-47,-48,-49,-50,-51,-52,50,-14,-20,50,122,17,-53,50,17,-21,17,-23,131,50,17,-24,-22,]),'WAIT':([0,2,3,4,5,6,7,8,9,11,19,20,21,22,43,45,51,79,80,82,85,108,109,116,123,124,126,127,130,133,135,],[18,18,-3,-5,-6,-7,-8,-9,-10,-12,-13,-4,-11,-15,-17,-19,18,-16,-18,18,18,-14,-20,18,18,-21,18,-23,18,-24,-22,]),'RETURN':([0,2,3,4,5,6,7,8,9,11,19,20,21,22,43,45,51,79,80,85,108,109,116,123,124,126,127,130,133,135,],[19,19,-3,-5,-6,-7,-8,-9,-10,-12,-13,-4,-11,-15,-17,-19,19,-16,-18,19,-14,-20,19,19,-21,19,-23,19,-24,-22,]),'$end':([0,1,2,3,4,5,6,7,8,9,11,19,20,21,22,43,45,79,80,108,109,124,127,133,135,],[-2,0,-1,-3,-5,-6,-7,-8,-9,-10,-12,-13,-4,-11,-15,-17,-19,-16,-18,-14,-20,-21,-23,-24,-22,]),'END':([3,4,5,6,7,8,9,11,19,20,21,22,43,45,51,79,80,85,108,109,116,123,124,126,127,130,133,135,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-4,-11,-15,-17,-19,-2,-16,-18,115,-14,-20,-2,128,-21,-2,-23,132,-24,-22,]),'ELSE':([3,4,5,6,7,8,9,11,19,20,21,22,33,34,35,36,37,38,39,43,45,51,72,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,117,121,124,127,133,135,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-4,-11,-15,-57,-58,-59,-60,-61,-62,-63,-17,-19,-2,-54,-55,-56,-16,-18,114,116,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-20,-53,-31,-21,-23,-24,-22,]),'NEWLINE':([10,33,34,35,36,37,38,39,42,44,72,75,76,77,81,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,117,118,121,122,129,131,134,],[21,-57,-58,-59,-60,-61,-62,-63,79,80,-54,-55,-56,-29,109,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,124,-31,127,-30,133,135,]),'ASSIGN':([14,42,],[24,24,]),'LPAREN':([15,17,19,24,25,28,29,30,31,32,40,41,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,114,125,],[25,29,41,29,29,29,29,74,29,29,29,29,83,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'SUB':([17,24,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,44,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,114,117,121,125,129,],[28,28,28,60,28,28,28,28,-57,-58,-59,-60,-61,-62,-63,28,28,60,60,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-54,60,28,60,60,60,28,28,60,60,60,60,60,60,-37,-38,-39,-40,-41,-42,60,60,60,60,60,60,60,60,60,-52,60,60,28,-53,60,28,60,]),'INV':([17,24,25,28,29,31,32,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,114,125,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'NOT':([17,24,25,28,29,31,32,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,114,125,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TIMEOUT':([17,24,25,28,29,31,32,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,110,114,125,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,119,33,33,]),'INT':([17,24,25,28,29,31,32,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,114,125,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FLOAT':([17,24,25,28,29,31,32,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,114,125,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TRUE':([17,24,25,28,29,31,32,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,114,125,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'FALSE':([17,24,25,28,29,31,32,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,114,125,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'UINT':([17,24,25,28,29,31,32,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,114,125,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'WAITTYPE':([18,119,],[40,125,]),'RPAREN':([25,33,34,35,36,37,38,39,41,46,47,48,72,73,75,76,77,78,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,112,113,117,121,],[-2,-57,-58,-59,-60,-61,-62,-63,-2,81,-25,-28,-54,106,-55,-56,-29,108,-2,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,117,-26,-27,120,-53,-31,]),'COMMA':([25,33,34,35,36,37,38,39,41,46,47,48,72,75,76,77,78,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,111,112,113,117,121,],[-2,-57,-58,-59,-60,-61,-62,-63,-2,82,-25,-28,-54,-55,-56,-29,82,-2,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-27,82,-53,-31,]),'IN':([26,],[49,]),'THEN':([27,33,34,35,36,37,38,39,72,75,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,117,121,],[51,-57,-58,-59,-60,-61,-62,-63,-54,-55,-56,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-31,]),'LSHIFT':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[52,-57,-58,-59,-60,-61,-62,-63,52,52,-54,52,-55,52,52,52,-32,-33,52,52,52,-37,-38,-39,-40,-41,-42,52,52,52,52,52,52,52,52,52,-52,52,52,-53,52,52,]),'RSHIFT':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[53,-57,-58,-59,-60,-61,-62,-63,53,53,-54,53,-55,53,53,53,-32,-33,53,53,53,-37,-38,-39,-40,-41,-42,53,53,53,53,53,53,53,53,53,-52,53,53,-53,53,53,]),'BITAND':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[54,-57,-58,-59,-60,-61,-62,-63,54,54,-54,54,-55,54,54,54,-32,-33,-34,54,54,-37,-38,-39,-40,-41,-42,54,54,54,54,54,54,54,54,54,-52,54,54,-53,54,54,]),'BITXOR':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[55,-57,-58,-59,-60,-61,-62,-63,55,55,-54,55,-55,55,55,55,-32,-33,-34,-35,55,-37,-38,-39,-40,-41,-42,55,55,55,55,55,55,55,55,55,-52,55,55,-53,55,55,]),'BITOR':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[56,-57,-58,-59,-60,-61,-62,-63,56,56,-54,56,-55,56,56,56,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,56,56,56,56,56,56,56,56,56,-52,56,56,-53,56,56,]),'EXP':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[57,-57,-58,-59,-60,-61,-62,-63,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-52,57,57,-53,57,57,]),'MOD':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[58,-57,-58,-59,-60,-61,-62,-63,58,58,-54,58,58,58,58,58,58,58,58,58,58,-37,-38,58,58,-41,-42,58,58,58,58,58,58,58,58,58,-52,58,58,-53,58,58,]),'ADD':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[59,-57,-58,-59,-60,-61,-62,-63,59,59,-54,59,59,59,59,59,59,59,59,59,59,-37,-38,-39,-40,-41,-42,59,59,59,59,59,59,59,59,59,-52,59,59,-53,59,59,]),'MUL':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[61,-57,-58,-59,-60,-61,-62,-63,61,61,-54,61,61,61,61,61,61,61,61,61,61,-37,-38,61,61,-41,-42,61,61,61,61,61,61,61,61,61,-52,61,61,-53,61,61,]),'DIV':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[62,-57,-58,-59,-60,-61,-62,-63,62,62,-54,62,62,62,62,62,62,62,62,62,62,-37,-38,62,62,-41,-42,62,62,62,62,62,62,62,62,62,-52,62,62,-53,62,62,]),'AND':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[63,-57,-58,-59,-60,-61,-62,-63,63,63,-54,63,-55,-56,63,63,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,63,-45,-46,-47,-48,-49,-50,63,-52,63,63,-53,63,63,]),'XOR':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[64,-57,-58,-59,-60,-61,-62,-63,64,64,-54,64,-55,-56,64,64,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,64,-45,-46,-47,-48,-49,-50,-51,-52,64,64,-53,64,64,]),'NEQ':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[65,-57,-58,-59,-60,-61,-62,-63,65,65,-54,65,-55,65,65,65,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,65,65,None,None,None,None,None,None,65,-52,65,65,-53,65,65,]),'GTE':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[66,-57,-58,-59,-60,-61,-62,-63,66,66,-54,66,-55,66,66,66,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,66,66,None,None,None,None,None,None,66,-52,66,66,-53,66,66,]),'LTE':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[67,-57,-58,-59,-60,-61,-62,-63,67,67,-54,67,-55,67,67,67,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,67,67,None,None,None,None,None,None,67,-52,67,67,-53,67,67,]),'EQ':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[68,-57,-58,-59,-60,-61,-62,-63,68,68,-54,68,-55,68,68,68,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,68,68,None,None,None,None,None,None,68,-52,68,68,-53,68,68,]),'LT':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[69,-57,-58,-59,-60,-61,-62,-63,69,69,-54,69,-55,69,69,69,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,69,69,None,None,None,None,None,None,69,-52,69,69,-53,69,69,]),'GT':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[70,-57,-58,-59,-60,-61,-62,-63,70,70,-54,70,-55,70,70,70,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,70,70,None,None,None,None,None,None,70,-52,70,70,-53,70,70,]),'OR':([27,33,34,35,36,37,38,39,44,47,72,73,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,121,129,],[71,-57,-58,-59,-60,-61,-62,-63,71,71,-54,71,-55,-56,71,71,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,71,-45,-46,-47,-48,-49,-50,-51,-52,71,71,-53,71,71,]),'WITH':([81,],[110,]),'LOOP':([120,132,],[126,134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,51,116,126,],[2,85,123,130,]),'statement':([0,2,51,85,116,123,126,130,],[3,20,3,20,3,20,3,20,]),'empty':([0,25,41,51,83,116,126,],[4,48,48,4,48,4,4,]),'declaration':([0,2,51,85,116,123,126,130,],[5,5,5,5,5,5,5,5,]),'assignment':([0,2,12,23,51,85,116,123,126,130,],[6,6,22,43,6,6,6,6,6,6,]),'call':([0,2,24,51,85,116,123,126,130,],[7,7,45,7,7,7,7,7,7,]),'for':([0,2,51,85,116,123,126,130,],[8,8,8,8,8,8,8,8,]),'if':([0,2,51,85,116,123,126,130,],[9,9,9,9,9,9,9,9,]),'wait':([0,2,51,82,85,116,123,126,130,],[10,10,10,112,10,10,10,10,10,]),'return':([0,2,51,85,116,123,126,130,],[11,11,11,11,11,11,11,11,]),'expression':([17,24,25,28,29,31,32,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,82,83,114,125,],[27,44,47,72,73,75,76,77,47,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,111,47,121,129,]),'arguments':([25,41,83,],[46,78,113,]),'timeout':([110,],[118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',112),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',118),
  ('statements -> statement','statements',1,'p_statements','parser.py',126),
  ('statements -> statements statement','statements',2,'p_statements_append','parser.py',130),
  ('statements -> empty','statements',1,'p_statements_empty','parser.py',135),
  ('statement -> declaration','statement',1,'p_statement','parser.py',144),
  ('statement -> assignment','statement',1,'p_statement','parser.py',145),
  ('statement -> call','statement',1,'p_statement','parser.py',146),
  ('statement -> for','statement',1,'p_statement','parser.py',147),
  ('statement -> if','statement',1,'p_statement','parser.py',148),
  ('statement -> wait NEWLINE','statement',2,'p_statement','parser.py',149),
  ('statement -> return','statement',1,'p_statement','parser.py',150),
  ('return -> RETURN','return',1,'p_return','parser.py',159),
  ('return -> RETURN LPAREN arguments RPAREN','return',4,'p_return_args','parser.py',163),
  ('declaration -> TYPE assignment','declaration',2,'p_declare','parser.py',171),
  ('declaration -> MUT TYPE NAME NEWLINE','declaration',4,'p_declare_mut','parser.py',175),
  ('declaration -> MUT TYPE assignment','declaration',3,'p_declare_mut_assign','parser.py',179),
  ('assignment -> NAME ASSIGN expression NEWLINE','assignment',4,'p_assignment','parser.py',188),
  ('assignment -> NAME ASSIGN call','assignment',3,'p_assignment','parser.py',189),
  ('call -> FUNCNAME LPAREN arguments RPAREN NEWLINE','call',5,'p_call','parser.py',198),
  ('call -> FUNCNAME LPAREN arguments RPAREN WITH timeout NEWLINE','call',7,'p_call_timeout','parser.py',202),
  ('for -> FOR NAME IN LPAREN arguments RPAREN LOOP statements END LOOP NEWLINE','for',11,'p_for','parser.py',210),
  ('if -> IF expression THEN statements END IF NEWLINE','if',7,'p_if','parser.py',218),
  ('if -> IF expression THEN statements ELSE statements END IF NEWLINE','if',9,'p_if_else','parser.py',222),
  ('arguments -> expression','arguments',1,'p_arguments','parser.py',230),
  ('arguments -> arguments COMMA expression','arguments',3,'p_arguments_append','parser.py',235),
  ('arguments -> arguments COMMA wait','arguments',3,'p_arguments_append','parser.py',236),
  ('arguments -> empty','arguments',1,'p_arguments_empty','parser.py',242),
  ('wait -> WAIT WAITTYPE expression','wait',3,'p_wait','parser.py',250),
  ('timeout -> TIMEOUT WAITTYPE expression','timeout',3,'p_timeout','parser.py',254),
  ('expression -> expression IF expression ELSE expression','expression',5,'p_expr_ternary','parser.py',262),
  ('expression -> expression LSHIFT expression','expression',3,'p_expr_lshift','parser.py',266),
  ('expression -> expression RSHIFT expression','expression',3,'p_expr_rshift','parser.py',270),
  ('expression -> expression BITAND expression','expression',3,'p_expr_bitand','parser.py',274),
  ('expression -> expression BITXOR expression','expression',3,'p_expr_bitxor','parser.py',278),
  ('expression -> expression BITOR expression','expression',3,'p_expr_bitor','parser.py',282),
  ('expression -> expression EXP expression','expression',3,'p_expr_exp','parser.py',286),
  ('expression -> expression MOD expression','expression',3,'p_expr_mod','parser.py',290),
  ('expression -> expression ADD expression','expression',3,'p_expr_add','parser.py',294),
  ('expression -> expression SUB expression','expression',3,'p_expr_sub','parser.py',298),
  ('expression -> expression MUL expression','expression',3,'p_expr_mul','parser.py',302),
  ('expression -> expression DIV expression','expression',3,'p_expr_div','parser.py',306),
  ('expression -> expression AND expression','expression',3,'p_expr_and','parser.py',310),
  ('expression -> expression XOR expression','expression',3,'p_expr_xor','parser.py',314),
  ('expression -> expression NEQ expression','expression',3,'p_expr_neq','parser.py',318),
  ('expression -> expression GTE expression','expression',3,'p_expr_gte','parser.py',322),
  ('expression -> expression LTE expression','expression',3,'p_expr_lte','parser.py',326),
  ('expression -> expression EQ expression','expression',3,'p_expr_eq','parser.py',330),
  ('expression -> expression LT expression','expression',3,'p_expr_lt','parser.py',334),
  ('expression -> expression GT expression','expression',3,'p_expr_gt','parser.py',338),
  ('expression -> expression OR expression','expression',3,'p_expr_or','parser.py',342),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expr_group','parser.py',346),
  ('expression -> TYPE LPAREN expression RPAREN','expression',4,'p_expr_cast','parser.py',350),
  ('expression -> SUB expression','expression',2,'p_expr_usub','parser.py',354),
  ('expression -> INV expression','expression',2,'p_expr_uinv','parser.py',358),
  ('expression -> NOT expression','expression',2,'p_expr_unot','parser.py',362),
  ('expression -> TIMEOUT','expression',1,'p_expr_dot_name','parser.py',366),
  ('expression -> NAME','expression',1,'p_expr_name','parser.py',370),
  ('expression -> INT','expression',1,'p_expr_int','parser.py',374),
  ('expression -> FLOAT','expression',1,'p_expr_float','parser.py',378),
  ('expression -> TRUE','expression',1,'p_expr_true','parser.py',382),
  ('expression -> FALSE','expression',1,'p_expr_false','parser.py',386),
  ('expression -> UINT','expression',1,'p_expr_uint','parser.py',390),
]
