
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEASSIGN DIVIDE FUNCNAME LPAREN MINUS NAME NUMBER PLUS PROCNAME RPAREN SEPERATOR TIMES TYPE\n    seq : statement\n        | seq statement\n        \n    \n    statement : declare\n              | assign\n              | procedure\n    \n    declare : TYPE NAME\n            | TYPE assign\n    \n    assign : NAME ASSIGN expression\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | group\n               | unary\n               | function\n               | NAME\n               | NUMBER\n    \n    group : LPAREN expression RPAREN\n    \n    function : FUNCNAME LPAREN arguments RPAREN\n    \n    procedure : PROCNAME LPAREN arguments RPAREN\n    \n    arguments : expression\n              | arguments SEPERATOR expression\n    \n    unary : MINUS expression\n    '
    
_lr_action_items = {'TYPE':([0,1,2,3,4,5,9,10,11,14,15,17,18,19,20,29,32,34,35,36,37,38,41,],[6,6,-1,-3,-4,-5,-2,-6,-7,-16,-8,-13,-14,-15,-17,-23,-20,-9,-10,-11,-12,-18,-19,]),'NAME':([0,1,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,31,32,33,34,35,36,37,38,41,],[7,7,-1,-3,-4,-5,10,-2,-6,-7,14,14,-16,-8,14,-13,-14,-15,-17,14,14,14,14,14,-23,14,-20,14,-9,-10,-11,-12,-18,-19,]),'PROCNAME':([0,1,2,3,4,5,9,10,11,14,15,17,18,19,20,29,32,34,35,36,37,38,41,],[8,8,-1,-3,-4,-5,-2,-6,-7,-16,-8,-13,-14,-15,-17,-23,-20,-9,-10,-11,-12,-18,-19,]),'$end':([1,2,3,4,5,9,10,11,14,15,17,18,19,20,29,32,34,35,36,37,38,41,],[0,-1,-3,-4,-5,-2,-6,-7,-16,-8,-13,-14,-15,-17,-23,-20,-9,-10,-11,-12,-18,-19,]),'ASSIGN':([7,10,],[12,12,]),'LPAREN':([8,12,13,16,21,22,25,26,27,28,31,33,],[13,21,21,21,21,31,21,21,21,21,21,21,]),'NUMBER':([12,13,16,21,25,26,27,28,31,33,],[20,20,20,20,20,20,20,20,20,20,]),'MINUS':([12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,33,34,35,36,37,38,40,41,],[16,16,-16,26,16,-13,-14,-15,-17,16,26,16,16,16,16,-23,26,16,16,-9,-10,-11,-12,-18,26,-19,]),'FUNCNAME':([12,13,16,21,25,26,27,28,31,33,],[22,22,22,22,22,22,22,22,22,22,]),'PLUS':([14,15,17,18,19,20,24,29,30,34,35,36,37,38,40,41,],[-16,25,-13,-14,-15,-17,25,-23,25,-9,-10,-11,-12,-18,25,-19,]),'TIMES':([14,15,17,18,19,20,24,29,30,34,35,36,37,38,40,41,],[-16,27,-13,-14,-15,-17,27,27,27,27,27,-11,-12,-18,27,-19,]),'DIVIDE':([14,15,17,18,19,20,24,29,30,34,35,36,37,38,40,41,],[-16,28,-13,-14,-15,-17,28,28,28,28,28,-11,-12,-18,28,-19,]),'RPAREN':([14,17,18,19,20,23,24,29,30,34,35,36,37,38,39,40,41,],[-16,-13,-14,-15,-17,32,-21,-23,38,-9,-10,-11,-12,-18,41,-22,-19,]),'SEPERATOR':([14,17,18,19,20,23,24,29,34,35,36,37,38,39,40,41,],[-16,-13,-14,-15,-17,33,-21,-23,-9,-10,-11,-12,-18,33,-22,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'seq':([0,],[1,]),'statement':([0,1,],[2,9,]),'declare':([0,1,],[3,3,]),'assign':([0,1,6,],[4,4,11,]),'procedure':([0,1,],[5,5,]),'expression':([12,13,16,21,25,26,27,28,31,33,],[15,24,29,30,34,35,36,37,24,40,]),'group':([12,13,16,21,25,26,27,28,31,33,],[17,17,17,17,17,17,17,17,17,17,]),'unary':([12,13,16,21,25,26,27,28,31,33,],[18,18,18,18,18,18,18,18,18,18,]),'function':([12,13,16,21,25,26,27,28,31,33,],[19,19,19,19,19,19,19,19,19,19,]),'arguments':([13,31,],[23,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> seq","S'",1,None,None,None),
  ('seq -> statement','seq',1,'p_progam','parser.py',13),
  ('seq -> seq statement','seq',2,'p_progam','parser.py',14),
  ('statement -> declare','statement',1,'p_statement','parser.py',25),
  ('statement -> assign','statement',1,'p_statement','parser.py',26),
  ('statement -> procedure','statement',1,'p_statement','parser.py',27),
  ('declare -> TYPE NAME','declare',2,'p_declare','parser.py',33),
  ('declare -> TYPE assign','declare',2,'p_declare','parser.py',34),
  ('assign -> NAME ASSIGN expression','assign',3,'p_assign','parser.py',40),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',46),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',47),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',48),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',49),
  ('expression -> group','expression',1,'p_expression','parser.py',50),
  ('expression -> unary','expression',1,'p_expression','parser.py',51),
  ('expression -> function','expression',1,'p_expression','parser.py',52),
  ('expression -> NAME','expression',1,'p_expression','parser.py',53),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',54),
  ('group -> LPAREN expression RPAREN','group',3,'p_group','parser.py',63),
  ('function -> FUNCNAME LPAREN arguments RPAREN','function',4,'p_function','parser.py',69),
  ('procedure -> PROCNAME LPAREN arguments RPAREN','procedure',4,'p_procedure','parser.py',75),
  ('arguments -> expression','arguments',1,'p_arguments','parser.py',81),
  ('arguments -> arguments SEPERATOR expression','arguments',3,'p_arguments','parser.py',82),
  ('unary -> MINUS expression','unary',2,'p_unary_sub','parser.py',92),
]
