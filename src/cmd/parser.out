Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> seq
Rule 1     seq -> statement
Rule 2     seq -> seq statement
Rule 3     statement -> declare
Rule 4     statement -> assign
Rule 5     statement -> procedure
Rule 6     declare -> TYPE NAME
Rule 7     declare -> TYPE assign
Rule 8     assign -> NAME ASSIGN expression
Rule 9     expression -> expression PLUS expression
Rule 10    expression -> expression MINUS expression
Rule 11    expression -> expression TIMES expression
Rule 12    expression -> expression DIVIDE expression
Rule 13    expression -> group
Rule 14    expression -> unary
Rule 15    expression -> function
Rule 16    expression -> NAME
Rule 17    expression -> NUMBER
Rule 18    group -> LPAREN expression RPAREN
Rule 19    function -> FUNCNAME LPAREN arguments RPAREN
Rule 20    procedure -> PROCNAME LPAREN arguments RPAREN
Rule 21    arguments -> expression
Rule 22    arguments -> arguments SEPERATOR expression
Rule 23    unary -> MINUS expression

Terminals, with rules where they appear

ASSIGN               : 8
DIVIDE               : 12
FUNCNAME             : 19
LPAREN               : 18 19 20
MINUS                : 10 23
NAME                 : 6 8 16
NUMBER               : 17
PLUS                 : 9
PROCNAME             : 20
RPAREN               : 18 19 20
SEPERATOR            : 22
TIMES                : 11
TYPE                 : 6 7
error                : 

Nonterminals, with rules where they appear

arguments            : 19 20 22
assign               : 4 7
declare              : 3
expression           : 8 9 9 10 10 11 11 12 12 18 21 22 23
function             : 15
group                : 13
procedure            : 5
seq                  : 2 0
statement            : 1 2
unary                : 14

Parsing method: LALR

state 0

    (0) S' -> . seq
    (1) seq -> . statement
    (2) seq -> . seq statement
    (3) statement -> . declare
    (4) statement -> . assign
    (5) statement -> . procedure
    (6) declare -> . TYPE NAME
    (7) declare -> . TYPE assign
    (8) assign -> . NAME ASSIGN expression
    (20) procedure -> . PROCNAME LPAREN arguments RPAREN

    TYPE            shift and go to state 6
    NAME            shift and go to state 7
    PROCNAME        shift and go to state 8

    seq                            shift and go to state 1
    statement                      shift and go to state 2
    declare                        shift and go to state 3
    assign                         shift and go to state 4
    procedure                      shift and go to state 5

state 1

    (0) S' -> seq .
    (2) seq -> seq . statement
    (3) statement -> . declare
    (4) statement -> . assign
    (5) statement -> . procedure
    (6) declare -> . TYPE NAME
    (7) declare -> . TYPE assign
    (8) assign -> . NAME ASSIGN expression
    (20) procedure -> . PROCNAME LPAREN arguments RPAREN

    TYPE            shift and go to state 6
    NAME            shift and go to state 7
    PROCNAME        shift and go to state 8

    statement                      shift and go to state 9
    declare                        shift and go to state 3
    assign                         shift and go to state 4
    procedure                      shift and go to state 5

state 2

    (1) seq -> statement .

    TYPE            reduce using rule 1 (seq -> statement .)
    NAME            reduce using rule 1 (seq -> statement .)
    PROCNAME        reduce using rule 1 (seq -> statement .)
    $end            reduce using rule 1 (seq -> statement .)


state 3

    (3) statement -> declare .

    TYPE            reduce using rule 3 (statement -> declare .)
    NAME            reduce using rule 3 (statement -> declare .)
    PROCNAME        reduce using rule 3 (statement -> declare .)
    $end            reduce using rule 3 (statement -> declare .)


state 4

    (4) statement -> assign .

    TYPE            reduce using rule 4 (statement -> assign .)
    NAME            reduce using rule 4 (statement -> assign .)
    PROCNAME        reduce using rule 4 (statement -> assign .)
    $end            reduce using rule 4 (statement -> assign .)


state 5

    (5) statement -> procedure .

    TYPE            reduce using rule 5 (statement -> procedure .)
    NAME            reduce using rule 5 (statement -> procedure .)
    PROCNAME        reduce using rule 5 (statement -> procedure .)
    $end            reduce using rule 5 (statement -> procedure .)


state 6

    (6) declare -> TYPE . NAME
    (7) declare -> TYPE . assign
    (8) assign -> . NAME ASSIGN expression

    NAME            shift and go to state 10

    assign                         shift and go to state 11

state 7

    (8) assign -> NAME . ASSIGN expression

    ASSIGN          shift and go to state 12


state 8

    (20) procedure -> PROCNAME . LPAREN arguments RPAREN

    LPAREN          shift and go to state 13


state 9

    (2) seq -> seq statement .

    TYPE            reduce using rule 2 (seq -> seq statement .)
    NAME            reduce using rule 2 (seq -> seq statement .)
    PROCNAME        reduce using rule 2 (seq -> seq statement .)
    $end            reduce using rule 2 (seq -> seq statement .)


state 10

    (6) declare -> TYPE NAME .
    (8) assign -> NAME . ASSIGN expression

    TYPE            reduce using rule 6 (declare -> TYPE NAME .)
    NAME            reduce using rule 6 (declare -> TYPE NAME .)
    PROCNAME        reduce using rule 6 (declare -> TYPE NAME .)
    $end            reduce using rule 6 (declare -> TYPE NAME .)
    ASSIGN          shift and go to state 12


state 11

    (7) declare -> TYPE assign .

    TYPE            reduce using rule 7 (declare -> TYPE assign .)
    NAME            reduce using rule 7 (declare -> TYPE assign .)
    PROCNAME        reduce using rule 7 (declare -> TYPE assign .)
    $end            reduce using rule 7 (declare -> TYPE assign .)


state 12

    (8) assign -> NAME ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    expression                     shift and go to state 15
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 13

    (20) procedure -> PROCNAME LPAREN . arguments RPAREN
    (21) arguments -> . expression
    (22) arguments -> . arguments SEPERATOR expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    arguments                      shift and go to state 23
    expression                     shift and go to state 24
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 14

    (16) expression -> NAME .

    PLUS            reduce using rule 16 (expression -> NAME .)
    MINUS           reduce using rule 16 (expression -> NAME .)
    TIMES           reduce using rule 16 (expression -> NAME .)
    DIVIDE          reduce using rule 16 (expression -> NAME .)
    TYPE            reduce using rule 16 (expression -> NAME .)
    NAME            reduce using rule 16 (expression -> NAME .)
    PROCNAME        reduce using rule 16 (expression -> NAME .)
    $end            reduce using rule 16 (expression -> NAME .)
    RPAREN          reduce using rule 16 (expression -> NAME .)
    SEPERATOR       reduce using rule 16 (expression -> NAME .)


state 15

    (8) assign -> NAME ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression

    TYPE            reduce using rule 8 (assign -> NAME ASSIGN expression .)
    NAME            reduce using rule 8 (assign -> NAME ASSIGN expression .)
    PROCNAME        reduce using rule 8 (assign -> NAME ASSIGN expression .)
    $end            reduce using rule 8 (assign -> NAME ASSIGN expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 16

    (23) unary -> MINUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    expression                     shift and go to state 29
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 17

    (13) expression -> group .

    PLUS            reduce using rule 13 (expression -> group .)
    MINUS           reduce using rule 13 (expression -> group .)
    TIMES           reduce using rule 13 (expression -> group .)
    DIVIDE          reduce using rule 13 (expression -> group .)
    TYPE            reduce using rule 13 (expression -> group .)
    NAME            reduce using rule 13 (expression -> group .)
    PROCNAME        reduce using rule 13 (expression -> group .)
    $end            reduce using rule 13 (expression -> group .)
    RPAREN          reduce using rule 13 (expression -> group .)
    SEPERATOR       reduce using rule 13 (expression -> group .)


state 18

    (14) expression -> unary .

    PLUS            reduce using rule 14 (expression -> unary .)
    MINUS           reduce using rule 14 (expression -> unary .)
    TIMES           reduce using rule 14 (expression -> unary .)
    DIVIDE          reduce using rule 14 (expression -> unary .)
    TYPE            reduce using rule 14 (expression -> unary .)
    NAME            reduce using rule 14 (expression -> unary .)
    PROCNAME        reduce using rule 14 (expression -> unary .)
    $end            reduce using rule 14 (expression -> unary .)
    RPAREN          reduce using rule 14 (expression -> unary .)
    SEPERATOR       reduce using rule 14 (expression -> unary .)


state 19

    (15) expression -> function .

    PLUS            reduce using rule 15 (expression -> function .)
    MINUS           reduce using rule 15 (expression -> function .)
    TIMES           reduce using rule 15 (expression -> function .)
    DIVIDE          reduce using rule 15 (expression -> function .)
    TYPE            reduce using rule 15 (expression -> function .)
    NAME            reduce using rule 15 (expression -> function .)
    PROCNAME        reduce using rule 15 (expression -> function .)
    $end            reduce using rule 15 (expression -> function .)
    RPAREN          reduce using rule 15 (expression -> function .)
    SEPERATOR       reduce using rule 15 (expression -> function .)


state 20

    (17) expression -> NUMBER .

    PLUS            reduce using rule 17 (expression -> NUMBER .)
    MINUS           reduce using rule 17 (expression -> NUMBER .)
    TIMES           reduce using rule 17 (expression -> NUMBER .)
    DIVIDE          reduce using rule 17 (expression -> NUMBER .)
    TYPE            reduce using rule 17 (expression -> NUMBER .)
    NAME            reduce using rule 17 (expression -> NUMBER .)
    PROCNAME        reduce using rule 17 (expression -> NUMBER .)
    $end            reduce using rule 17 (expression -> NUMBER .)
    RPAREN          reduce using rule 17 (expression -> NUMBER .)
    SEPERATOR       reduce using rule 17 (expression -> NUMBER .)


state 21

    (18) group -> LPAREN . expression RPAREN
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    expression                     shift and go to state 30
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 22

    (19) function -> FUNCNAME . LPAREN arguments RPAREN

    LPAREN          shift and go to state 31


state 23

    (20) procedure -> PROCNAME LPAREN arguments . RPAREN
    (22) arguments -> arguments . SEPERATOR expression

    RPAREN          shift and go to state 32
    SEPERATOR       shift and go to state 33


state 24

    (21) arguments -> expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 21 (arguments -> expression .)
    SEPERATOR       reduce using rule 21 (arguments -> expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 25

    (9) expression -> expression PLUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    expression                     shift and go to state 34
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 26

    (10) expression -> expression MINUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    expression                     shift and go to state 35
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 27

    (11) expression -> expression TIMES . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    expression                     shift and go to state 36
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 28

    (12) expression -> expression DIVIDE . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    expression                     shift and go to state 37
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 29

    (23) unary -> MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 23 (unary -> MINUS expression .)
    MINUS           reduce using rule 23 (unary -> MINUS expression .)
    TYPE            reduce using rule 23 (unary -> MINUS expression .)
    NAME            reduce using rule 23 (unary -> MINUS expression .)
    PROCNAME        reduce using rule 23 (unary -> MINUS expression .)
    $end            reduce using rule 23 (unary -> MINUS expression .)
    RPAREN          reduce using rule 23 (unary -> MINUS expression .)
    SEPERATOR       reduce using rule 23 (unary -> MINUS expression .)
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28

  ! TIMES           [ reduce using rule 23 (unary -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (unary -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]


state 30

    (18) group -> LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 38
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 31

    (19) function -> FUNCNAME LPAREN . arguments RPAREN
    (21) arguments -> . expression
    (22) arguments -> . arguments SEPERATOR expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    arguments                      shift and go to state 39
    expression                     shift and go to state 24
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 32

    (20) procedure -> PROCNAME LPAREN arguments RPAREN .

    TYPE            reduce using rule 20 (procedure -> PROCNAME LPAREN arguments RPAREN .)
    NAME            reduce using rule 20 (procedure -> PROCNAME LPAREN arguments RPAREN .)
    PROCNAME        reduce using rule 20 (procedure -> PROCNAME LPAREN arguments RPAREN .)
    $end            reduce using rule 20 (procedure -> PROCNAME LPAREN arguments RPAREN .)


state 33

    (22) arguments -> arguments SEPERATOR . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . group
    (14) expression -> . unary
    (15) expression -> . function
    (16) expression -> . NAME
    (17) expression -> . NUMBER
    (18) group -> . LPAREN expression RPAREN
    (23) unary -> . MINUS expression
    (19) function -> . FUNCNAME LPAREN arguments RPAREN

    NAME            shift and go to state 14
    NUMBER          shift and go to state 20
    LPAREN          shift and go to state 21
    MINUS           shift and go to state 16
    FUNCNAME        shift and go to state 22

    expression                     shift and go to state 40
    group                          shift and go to state 17
    unary                          shift and go to state 18
    function                       shift and go to state 19

state 34

    (9) expression -> expression PLUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 9 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 9 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 9 (expression -> expression PLUS expression .)
    NAME            reduce using rule 9 (expression -> expression PLUS expression .)
    PROCNAME        reduce using rule 9 (expression -> expression PLUS expression .)
    $end            reduce using rule 9 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 9 (expression -> expression PLUS expression .)
    SEPERATOR       reduce using rule 9 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28

  ! TIMES           [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]


state 35

    (10) expression -> expression MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 10 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 10 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 10 (expression -> expression MINUS expression .)
    NAME            reduce using rule 10 (expression -> expression MINUS expression .)
    PROCNAME        reduce using rule 10 (expression -> expression MINUS expression .)
    $end            reduce using rule 10 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 10 (expression -> expression MINUS expression .)
    SEPERATOR       reduce using rule 10 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28

  ! TIMES           [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]


state 36

    (11) expression -> expression TIMES expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 11 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 11 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 11 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 11 (expression -> expression TIMES expression .)
    TYPE            reduce using rule 11 (expression -> expression TIMES expression .)
    NAME            reduce using rule 11 (expression -> expression TIMES expression .)
    PROCNAME        reduce using rule 11 (expression -> expression TIMES expression .)
    $end            reduce using rule 11 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 11 (expression -> expression TIMES expression .)
    SEPERATOR       reduce using rule 11 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]


state 37

    (12) expression -> expression DIVIDE expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 12 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 12 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 12 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 12 (expression -> expression DIVIDE expression .)
    TYPE            reduce using rule 12 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 12 (expression -> expression DIVIDE expression .)
    PROCNAME        reduce using rule 12 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 12 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 12 (expression -> expression DIVIDE expression .)
    SEPERATOR       reduce using rule 12 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]


state 38

    (18) group -> LPAREN expression RPAREN .

    PLUS            reduce using rule 18 (group -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (group -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 18 (group -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (group -> LPAREN expression RPAREN .)
    TYPE            reduce using rule 18 (group -> LPAREN expression RPAREN .)
    NAME            reduce using rule 18 (group -> LPAREN expression RPAREN .)
    PROCNAME        reduce using rule 18 (group -> LPAREN expression RPAREN .)
    $end            reduce using rule 18 (group -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (group -> LPAREN expression RPAREN .)
    SEPERATOR       reduce using rule 18 (group -> LPAREN expression RPAREN .)


state 39

    (19) function -> FUNCNAME LPAREN arguments . RPAREN
    (22) arguments -> arguments . SEPERATOR expression

    RPAREN          shift and go to state 41
    SEPERATOR       shift and go to state 33


state 40

    (22) arguments -> arguments SEPERATOR expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 22 (arguments -> arguments SEPERATOR expression .)
    SEPERATOR       reduce using rule 22 (arguments -> arguments SEPERATOR expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 41

    (19) function -> FUNCNAME LPAREN arguments RPAREN .

    PLUS            reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)
    MINUS           reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)
    TIMES           reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)
    TYPE            reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)
    NAME            reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)
    PROCNAME        reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)
    $end            reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)
    SEPERATOR       reduce using rule 19 (function -> FUNCNAME LPAREN arguments RPAREN .)

