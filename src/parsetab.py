
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEASSIGN DIVIDE LPAREN MINUS NAME NUMBER PLUS RPAREN TIMES TYPE\n    seq : statement\n        \n    \n    seq : seq statement\n    \n    statement : declare\n              | assign\n    \n    declare : TYPE NAME\n            | TYPE assign\n    \n    assign : NAME ASSIGN expression\n    \n    expression : expression PLUS expression\n    \n    expression : expression MINUS expression\n    \n    expression : expression TIMES expression\n    \n    expression : expression DIVIDE expression\n    \n    expression : LPAREN expression RPAREN\n    \n    expression : NAME\n    \n    expression : NUMBER\n    \n    expression : unary\n    \n    unary : MINUS NAME\n           | MINUS NUMBER\n    '
    
_lr_action_items = {'TYPE':([0,1,2,3,4,7,8,9,11,12,15,16,21,22,24,25,26,27,28,],[5,5,-1,-3,-4,-2,-5,-6,-13,-7,-14,-15,-16,-17,-8,-9,-10,-11,-12,]),'NAME':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,],[6,6,-1,-3,-4,8,-2,-5,-6,11,-13,-7,21,11,-14,-15,11,11,11,11,-16,-17,-8,-9,-10,-11,-12,]),'$end':([1,2,3,4,7,8,9,11,12,15,16,21,22,24,25,26,27,28,],[0,-1,-3,-4,-2,-5,-6,-13,-7,-14,-15,-16,-17,-8,-9,-10,-11,-12,]),'ASSIGN':([6,8,],[10,10,]),'LPAREN':([10,14,17,18,19,20,],[14,14,14,14,14,14,]),'NUMBER':([10,13,14,17,18,19,20,],[15,22,15,15,15,15,15,]),'MINUS':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[13,-13,18,13,-14,-15,13,13,13,13,-16,-17,18,-8,-9,-10,-11,-12,]),'PLUS':([11,12,15,16,21,22,23,24,25,26,27,28,],[-13,17,-14,-15,-16,-17,17,-8,-9,-10,-11,-12,]),'TIMES':([11,12,15,16,21,22,23,24,25,26,27,28,],[-13,19,-14,-15,-16,-17,19,19,19,-10,-11,-12,]),'DIVIDE':([11,12,15,16,21,22,23,24,25,26,27,28,],[-13,20,-14,-15,-16,-17,20,20,20,-10,-11,-12,]),'RPAREN':([11,15,16,21,22,23,24,25,26,27,28,],[-13,-14,-15,-16,-17,28,-8,-9,-10,-11,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'seq':([0,],[1,]),'statement':([0,1,],[2,7,]),'declare':([0,1,],[3,3,]),'assign':([0,1,5,],[4,4,9,]),'expression':([10,14,17,18,19,20,],[12,23,24,25,26,27,]),'unary':([10,14,17,18,19,20,],[16,16,16,16,16,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> seq","S'",1,None,None,None),
  ('seq -> statement','seq',1,'p_progam','parser.py',54),
  ('seq -> seq statement','seq',2,'p_program_append','parser.py',61),
  ('statement -> declare','statement',1,'p_statement','parser.py',68),
  ('statement -> assign','statement',1,'p_statement','parser.py',69),
  ('declare -> TYPE NAME','declare',2,'p_declare','parser.py',75),
  ('declare -> TYPE assign','declare',2,'p_declare','parser.py',76),
  ('assign -> NAME ASSIGN expression','assign',3,'p_assign','parser.py',82),
  ('expression -> expression PLUS expression','expression',3,'p_expr_plus','parser.py',88),
  ('expression -> expression MINUS expression','expression',3,'p_expr_minus','parser.py',94),
  ('expression -> expression TIMES expression','expression',3,'p_expr_times','parser.py',100),
  ('expression -> expression DIVIDE expression','expression',3,'p_expr_divide','parser.py',106),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expr_paren','parser.py',112),
  ('expression -> NAME','expression',1,'p_expr_name','parser.py',118),
  ('expression -> NUMBER','expression',1,'p_expr_number','parser.py',124),
  ('expression -> unary','expression',1,'p_expr_unary','parser.py',130),
  ('unary -> MINUS NAME','unary',2,'p_unary','parser.py',136),
  ('unary -> MINUS NUMBER','unary',2,'p_unary','parser.py',137),
]
